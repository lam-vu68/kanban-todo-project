"""Add role field to users table and rename password to password_hash

Revision ID: 781ccb6b257f
Revises: f38c6e8af114
Create Date: 2025-10-19 02:46:08.205895

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '781ccb6b257f'
down_revision: Union[str, Sequence[str], None] = 'f38c6e8af114'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1) Add the new columns as nullable / with a safe server_default for role
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('role', sa.String(length=20), nullable=False, server_default='user'))

    # 2) Migrate data from old `password` to `password_hash` when present
    #    Use SQL to populate the new column for existing rows.
    op.execute("UPDATE users SET password_hash = password WHERE password_hash IS NULL AND password IS NOT NULL")

    # 3) Drop the old column
    op.drop_column('users', 'password')

    # 4) Make password_hash NOT NULL now that data has been migrated
    op.alter_column('users', 'password_hash', nullable=False)

    # 5) Remove the server default for role (optional) so future inserts must set it or rely on ORM default
    op.alter_column('users', 'role', server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1) Re-create the old `password` column as nullable (so we can populate it)
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))

    # 2) Copy data back from password_hash to password where applicable
    op.execute("UPDATE users SET password = password_hash WHERE password IS NULL AND password_hash IS NOT NULL")

    # 3) Make password NOT NULL to match previous schema expectation
    op.alter_column('users', 'password', nullable=False)

    # 4) Drop the columns added in upgrade
    op.drop_column('users', 'role')
    op.drop_column('users', 'password_hash')
    # ### end Alembic commands ###
